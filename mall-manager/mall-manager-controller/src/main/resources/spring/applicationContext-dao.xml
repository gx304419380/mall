<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- jdbc.properties文件路径配置 -->
	<context:property-placeholder location="classpath:druid.properties"/>
	<!-- DataSource配置 -->
	<bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="initialSize" value="${jdbc.initialSize}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}"></property>
        <property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}"></property>
        <property name="testOnBorrow" value="${jdbc.testOnBorrow}"></property>
        <property name="maxActive" value="${jdbc.maxActive}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="testOnReturn" value="${jdbc.testOnReturn}"></property>
        <property name="filters" value="${jdbc.filters}"></property>
        <property name="maxPoolPreparedStatementPerConnectionSize"
                  value="${jdbc.maxPoolPreparedStatementPerConnectionSize}"></property>
        <property name="driverClassName" value="${jdbc.driverClassName}"></property>
        <property name="maxWait" value="${jdbc.maxWait}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="testWhileIdle" value="${jdbc.testWhileIdle}"></property>
        <property name="validationQuery" value="${jdbc.validationQuery}"></property>
        <property name="poolPreparedStatements" value="${jdbc.poolPreparedStatements}"></property>
	</bean>

    <!-- 连接数据工厂:根据 SqlSessionFactoryBean生成sqlSession-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <!-- 定义别名 -->
        <property name="typeAliasesPackage" value="com.fly.pojo"></property>
        <!-- 加载mybatis核心配置文件 -->
        <property name="configLocation" value="classpath:mybatisConfig.xml"></property>
    </bean>
    <!--
    扫描接口：接口代理开发
        * 接口方法名和映射文件语句字段的Id必须一致
        * 接口和映射文件在同一个目录，且名称必须相同
        * 映射文件namespace必须是接口的全类路径名
    -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.fly.dao"></property>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>

    <!--配置spring的包扫描，要不然总提示异常-->
    <context:component-scan base-package="com.fly.dao"/>

</beans>
